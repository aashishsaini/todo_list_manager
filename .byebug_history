c
collection
c
collection
c
@todos
c
current_user.admin?
@project
c
@project
c
@project
c
current_user.todos.where(project_id: params[:id])
current_user.todos
current_user
c
project.todos.first.errors
project.todos
project.errors
developer.errors
developer.valid?
c
cc
c
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
n
collection
c
statuses(@projects)
c
statuses(@projects)
c
@projects.uniq.count-1
l
project
@projects.flatten.uniq.find_index(project)
@projects.uniq.flatten
@projects.uniq
@projects.uniq.find_index(project)
project
@projects.uniq.find_index(project)
c
@projects.uniq.map(&:todos).flatten.group_by(&:status).first.last.group_by(&:project)c
@projects.uniq.map(&:todos).flatten.group_by(&:status).first.last
@projects.uniq.map(&:todos).flatten.group_by(&:status).first.last.group_by(&:project)
@projects.uniq.map(&:todos).flatten.group_by(&:status).first.last
@projects.uniq.map(&:todos).flatten.group_by(&:status).first
@projects.uniq.map(&:todos).flatten.group_by(&:status)
c
v
@projects.uniq.map(&:todos).first
@projects.uniq.map(&:todos)
@projects.uniq.map{|x| [x.todos]}
@projects.uniq.map(&:todos).flatten
@projects.uniq.map(&:todos)
c
User.developers.map{|x| [x.name, x.id] }.compact
User.developers.map{|x| [x.name, x.id] }.compact!
User.developers.map{|x| [x.name, x.id] }.compact
User.developers.map{|x| [x.name, x.id] }
User.developers
c
@todoc
p @todo
c
@todos.flatten.group_by(&:status)["New"].group_by(&:user)
@todos.flatten.group_by(&:status)["New"]
@todos.flatten.group_by(&:status)
@todos.flatten.group_by(&:status).first
@todos.flatten.group_by(&:status).first.group_by(&:user)
@todos.flatten.group_by(&:status).group_by(&:user)
@todos.flatten.group_by(&:status).group_by(:user)
@todos.flatten.group_by(&:status)
@todos
c
@projects.map(&:users).uniq.flatten
@projects.map(&:users).uniq
@projects.map(&:users)
c
Project.last.users
Project.last
current_user.projects
current_user
